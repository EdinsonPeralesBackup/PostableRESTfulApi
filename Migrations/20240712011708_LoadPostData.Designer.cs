// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PostableRESTfulApi.Data;

#nullable disable

namespace PostableRESTFulApi.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240712011708_LoadPostData")]
    partial class LoadPostData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PostableRESTfulApi.Models.Like", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("PostId", "UserId")
                        .IsUnique();

                    b.ToTable("Likes");
                });

            modelBuilder.Entity("PostableRESTfulApi.Models.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Post para crear una página web. Bienvenidos!!! en este post veremos los pasos para crear una página web",
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 38, DateTimeKind.Local).AddTicks(5878),
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Content = "Introducción a C# y .NET. En este post aprenderemos sobre los fundamentos de C# y .NET",
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 38, DateTimeKind.Local).AddTicks(5898),
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Content = "Cómo usar Entity Framework Core en tus proyectos. Tutorial paso a paso",
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 38, DateTimeKind.Local).AddTicks(5900),
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            Content = "Mejores prácticas en el desarrollo de APIs RESTful",
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 38, DateTimeKind.Local).AddTicks(5901),
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            Content = "Conceptos básicos de HTML y CSS",
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 38, DateTimeKind.Local).AddTicks(5903),
                            UserId = 2
                        },
                        new
                        {
                            Id = 6,
                            Content = "Cómo empezar con JavaScript",
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 38, DateTimeKind.Local).AddTicks(5905),
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            Content = "Guía para principiantes sobre React",
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 38, DateTimeKind.Local).AddTicks(5906),
                            UserId = 2
                        },
                        new
                        {
                            Id = 8,
                            Content = "Cómo crear un portafolio en línea",
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 38, DateTimeKind.Local).AddTicks(5908),
                            UserId = 2
                        },
                        new
                        {
                            Id = 9,
                            Content = "Introducción a SQL y bases de datos relacionales",
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 38, DateTimeKind.Local).AddTicks(5910),
                            UserId = 3
                        },
                        new
                        {
                            Id = 10,
                            Content = "Cómo optimizar consultas SQL",
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 38, DateTimeKind.Local).AddTicks(5911),
                            UserId = 3
                        },
                        new
                        {
                            Id = 11,
                            Content = "Manejo de transacciones en SQL Server",
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 38, DateTimeKind.Local).AddTicks(5913),
                            UserId = 3
                        },
                        new
                        {
                            Id = 12,
                            Content = "Diseño de esquemas de base de datos eficientes",
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 38, DateTimeKind.Local).AddTicks(5915),
                            UserId = 3
                        },
                        new
                        {
                            Id = 13,
                            Content = "Conceptos básicos de Python para principiantes",
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 38, DateTimeKind.Local).AddTicks(5916),
                            UserId = 4
                        },
                        new
                        {
                            Id = 14,
                            Content = "Cómo usar pandas para análisis de datos",
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 38, DateTimeKind.Local).AddTicks(5918),
                            UserId = 4
                        },
                        new
                        {
                            Id = 15,
                            Content = "Introducción a la inteligencia artificial con Python",
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 38, DateTimeKind.Local).AddTicks(5920),
                            UserId = 4
                        },
                        new
                        {
                            Id = 16,
                            Content = "Desarrollo de aplicaciones web con Flask",
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 38, DateTimeKind.Local).AddTicks(5921),
                            UserId = 4
                        },
                        new
                        {
                            Id = 17,
                            Content = "Fundamentos de programación orientada a objetos",
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 38, DateTimeKind.Local).AddTicks(5923),
                            UserId = 5
                        },
                        new
                        {
                            Id = 18,
                            Content = "Cómo escribir código limpio y mantenible",
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 38, DateTimeKind.Local).AddTicks(5925),
                            UserId = 5
                        },
                        new
                        {
                            Id = 19,
                            Content = "Introducción a los patrones de diseño",
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 38, DateTimeKind.Local).AddTicks(5926),
                            UserId = 5
                        },
                        new
                        {
                            Id = 20,
                            Content = "Cómo hacer pruebas unitarias en C#",
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 38, DateTimeKind.Local).AddTicks(5928),
                            UserId = 5
                        });
                });

            modelBuilder.Entity("PostableRESTfulApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasFilter("[Email] IS NOT NULL");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 39, DateTimeKind.Local).AddTicks(2851),
                            Email = "edi_perales@neelvat.com",
                            FirstName = "Edinson",
                            LastName = "Perales",
                            Password = "123456",
                            Role = "Admin",
                            UserName = "EdinsonPerales"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 39, DateTimeKind.Local).AddTicks(2870),
                            FirstName = "John",
                            LastName = "Doe",
                            Password = "password1",
                            Role = "User",
                            UserName = "JohnDoe"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 39, DateTimeKind.Local).AddTicks(2873),
                            Email = "jane_smith@example.com",
                            Password = "password2",
                            Role = "User",
                            UserName = "JaneSmith"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 39, DateTimeKind.Local).AddTicks(2875),
                            FirstName = "Mike",
                            Password = "password3",
                            Role = "User",
                            UserName = "MikeBrown"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 39, DateTimeKind.Local).AddTicks(2879),
                            LastName = "Connor",
                            Password = "password4",
                            Role = "Admin",
                            UserName = "SaraConnor"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 39, DateTimeKind.Local).AddTicks(2882),
                            Password = "password5",
                            Role = "User",
                            UserName = "TomHanks"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 39, DateTimeKind.Local).AddTicks(2884),
                            Email = "emma_watson@example.com",
                            FirstName = "Emma",
                            LastName = "Watson",
                            Password = "password6",
                            Role = "User",
                            UserName = "EmmaWatson"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 39, DateTimeKind.Local).AddTicks(2886),
                            Email = "robert_downey@example.com",
                            Password = "password7",
                            Role = "User",
                            UserName = "RobertDowney"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 39, DateTimeKind.Local).AddTicks(2892),
                            FirstName = "Chris",
                            Password = "password8",
                            Role = "User",
                            UserName = "ChrisEvans"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 39, DateTimeKind.Local).AddTicks(2894),
                            LastName = "Johansson",
                            Password = "password9",
                            Role = "User",
                            UserName = "ScarlettJohansson"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 7, 11, 20, 17, 8, 39, DateTimeKind.Local).AddTicks(2896),
                            FirstName = "Bruce",
                            LastName = "Wayne",
                            Password = "password10",
                            Role = "User",
                            UserName = "BruceWayne"
                        });
                });

            modelBuilder.Entity("PostableRESTfulApi.Models.Like", b =>
                {
                    b.HasOne("PostableRESTfulApi.Models.Post", "Post")
                        .WithMany("Likes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("PostableRESTfulApi.Models.User", "User")
                        .WithMany("Likes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PostableRESTfulApi.Models.Post", b =>
                {
                    b.HasOne("PostableRESTfulApi.Models.User", "User")
                        .WithMany("Posts")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PostableRESTfulApi.Models.Post", b =>
                {
                    b.Navigation("Likes");
                });

            modelBuilder.Entity("PostableRESTfulApi.Models.User", b =>
                {
                    b.Navigation("Likes");

                    b.Navigation("Posts");
                });
#pragma warning restore 612, 618
        }
    }
}
